<!DOCTYPE html>
<html>

    <head>
        <title>Elite Consorts</title>
        
     <!-- Latest compiled and minified CSS -->
       <link rel="stylesheet" type="text/css" href="https://cdnjs.cloudflare.com/ajax/libs/semantic-ui/2.4.1/semantic.min.css">
          <link href="https://fonts.googleapis.com/css?family=Lato|Questrial&display=swap" rel="stylesheet">
        <link rel="stylesheet" type="text/css" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
          <link rel="stylesheet" type="text/css" href="https://cdnjs.cloudflare.com/ajax/libs/semantic-ui/2.4.1/semantic.min.css">
        <link rel="stylesheet" type="text/css" href="/stylesheet/signup.css">
       <link href="https://fonts.googleapis.com/css?family=Great+Vibes&display=swap" rel="stylesheet">
    
    </head>
    <body style="  height: 100%;
    overflow: hidden;
    padding-top: 100px;  overflow: hidden;">
       
   <nav class="navbar navbar-default navbar-fixed-top" style="background-color:	#FFFFFF;">
    <div class="container">
        <div class="navbar-header">
            <button type="button" class="navbar-toggle" data-toggle="collapse"
                    data-target="#myNavbar">
                <span class="glyphicon glyphicon-menu-hamburger"></span>
            </button>
           
          
       
		<h1 class="brand brand-name navbar-left"><div class"navbar-left"><a href="/" style="font-family: 'Great Vibes', cursive;color:black "><span style="color:#F08080;">Elite </span><span>Consorts</span></a></h1>
        </div>
        <div class="collapse navbar-collapse navbar-right" id="myNavbar">
            <ul class="nav navbar-nav">
                <li><a href="/instructions">Know the difference between Premium and Regular</a></li>
   			
    	
            </ul>
        </div>
    </div>
</nav>

<div class="container">
  

       <% include partials/messages %>
      <div style="width:30%; margin:30px auto">
<form action="/newreg" method="POST">
    
    <div class="form-group">
        <input class="form-control" type="text" name="name" placeholder="name" >
      </div>
          <div class="form-group">
        <input class="form-control" type="password" id="password" name="password" placeholder="Password"  minlength="8" required>
      </div>
            <div class="form-group">
        <input class="form-control" type="password" id="password2" name="password2" placeholder="Retype Password"  minlength="8" required>
      </div>
    <div class="form-group">
        <input class="form-control" type="text" name="email" placeholder="email" required>
      </div>
       <div class="ui input">
            <select class="ui form-group dropdown" name="sexuality" placeholder="sexuality" type="text" required>
               <option value="default">Sexuality</option>
              <option value="Bi">Straight</option>
              <option value="Trans">Gay</option>
             <option value="Post ">Bisexual</option>
              
           
            </select>
     </div>
    
     <div>
            <select class="ui form-group dropdown" name="gender" placeholder="gender" type="text" required>
              <option value="default">Gender</option>
              <option value="Male">Male</option>
              <option value="Female">Female</option>
                <option value="Transgender">Post-Op Trans</option>
               <option value="Transgender">Pre-Op Trans</option>
            </select>
     </div>
   
    <div class="form-group">
         <input class="form-control" type="text" name="age"  placeholder="age" required>
         
     </div>
     <div>
            <select class="ui form-group dropdown" name="ethnicity" placeholder="ethnicity" type="text" required>
              <option value="default">Ethnicity</option>
              <option value="Asian">Asian</option>
              <option value="Hispanic">Hispanic</option>
               <option value="Latina">Latina</option>
              <option value="Black">Black</option>
            </select>
     </div>
  <div>
            <select class="ui form-group dropdown" name="feet" id="feet" placeholder="feet" type="number" required>
              <option value=0>Feet</option>
              <option value=1>1</option>
              <option value=2>2</option>
               <option value=3>3</option>
              <option value=4>4</option>
              <option value=5>5</option>
              <option value=6>6</option>
              <option value=7>7</option>
              <option value=8>8</option>
            </select>
               <select class="ui form-group dropdown" name="inch" id="inch" placeholder="inch" type="number" required>
              <option value=0>Inch</option>
            <option value=1>1</option>
              <option value=2>2</option>
               <option value=3>3</option>
              <option value=4>4</option>
              <option value=5>5</option>
              <option value=6>6</option>
              <option value=7>7</option>
              <option value=8>8</option>
              <option value=9>9</option>
              <option value=10>10</option>
              <option value=11>11</option>
              <option value=12>12</option>
            </select>
            
     </div>
      <div  id="pac-card">
      <div>


      </div>
      <div class="ui form-group" id="pac-container">
        <input class="form-control" id="pac-input" type="text" name="address"
            placeholder="Enter a location">
      </div>
    </div>

         
 
    <button class="btn btn-md btn-default btn-block">
        Create
    </button>
    
</form>

<a class="ui  orange button" style="margin:10px 0" href="/userprofiles/new"> Go Back</a>
</div>
</div>

    <script>
      // This example requires the Places library. Include the libraries=places
      // parameter when you first load the API. For example:
      // <script src="https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY&libraries=places">

      function initMap() {

        var card = document.getElementById('pac-card');
        var input = document.getElementById('pac-input');
        var types = document.getElementById('type-selector');
         var strictBounds = document.getElementById('strict-bounds-selector');

        var autocomplete = new google.maps.places.Autocomplete(input);
        //
        // // Bind the map's bounds (viewport) property to the autocomplete object,
        // // so that the autocomplete requests use the current map bounds for the
        // // bounds option in the request.
        // autocomplete.bindTo('bounds', map);
        //
        // // Set the data fields to return when the user selects a place.
        autocomplete.setFields(
            ['address_components', 'geometry', 'icon', 'name']);

        // var infowindow = new google.maps.InfoWindow();
        // var infowindowContent = document.getElementById('infowindow-content');
        // infowindow.setContent(infowindowContent);
        // var marker = new google.maps.Marker({
        //   map: map,
        //   anchorPoint: new google.maps.Point(0, -29)
        // });

        autocomplete.addListener('place_changed', function() {
          //infowindow.close();
         // marker.setVisible(false);
          var place = autocomplete.getPlace();
          if (!place.geometry) {
            // User entered the name of a Place that was not suggested and
            // pressed the Enter key, or the Place Details request failed.
            window.alert("No details available for input: '" + place.name + "'");
            return;
          }

          // If the place has a geometry, then present it on a map.
        
        //  marker.setPosition(place.geometry.location);
        //  marker.setVisible(true);

          var address = '';
          if (place.address_components) {
            address = [
              (place.address_components[0] && place.address_components[0].short_name || ''),
              (place.address_components[1] && place.address_components[1].short_name || ''),
              (place.address_components[2] && place.address_components[2].short_name || '')
            ].join(' ');
          }

  
        });

        // Sets a listener on a radio button to change the filter type on Places
        // Autocomplete.
     
     

      }
    </script>
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCpWecUYIcQPOSbNqqH3sI10xJaeOg0GMk&libraries=places&callback=initMap"
        async defer></script>






<% include partials/footer1 %>

